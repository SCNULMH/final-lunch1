{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Desktop\\\\lunch-master-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport RestaurantList from './RestaurantList';\nimport RadiusInput from './RadiusInput';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [radius, setRadius] = useState(2000);\n  const [address, setAddress] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n  const [count, setCount] = useState(0);\n  const [excludedCategory, setExcludedCategory] = useState('');\n  const [includedCategory, setIncludedCategory] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.9687735,\n    lng: 127.4802359\n  });\n  const [searchResults, setSearchResults] = useState([]);\n  const REST_API_KEY = '25d26859dae2a8cb671074b910e16912';\n  const JAVASCRIPT_API_KEY = '51120fdc1dd2ae273ccd643e7a301c77';\n  const fetchAddressData = async query => {\n    const url = `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`; // 주소 검색으로 변경\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `KakaoAK ${REST_API_KEY}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`주소 검색 실패: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setSearchResults(data.documents);\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주소 검색 중 오류 발생:\", error);\n      alert(\"주소 검색 중 오류가 발생했습니다.\");\n    }\n  };\n  const fetchNearbyRestaurants = async (x, y) => {\n    const url = `https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `KakaoAK ${REST_API_KEY}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setRestaurants(data.documents);\n      } else {\n        alert(\"근처에 식당이 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"식당 검색 중 오류 발생:\", error);\n      alert(\"식당 검색 중 오류가 발생했습니다.\");\n    }\n  };\n  const handleSearch = async () => {\n    if (!address) {\n      alert(\"주소를 입력해 주세요.\");\n      return;\n    }\n    await fetchAddressData(address); // 주소를 검색\n  };\n  const handleSelectAddress = result => {\n    setAddress(result.address_name); // 선택한 주소로 설정\n    setMapCenter({\n      lat: parseFloat(result.y),\n      lng: parseFloat(result.x)\n    }); // 지도 중심 설정\n    fetchNearbyRestaurants(result.x, result.y); // 근처 식당 검색\n    setSearchResults([]); // 검색 결과 초기화\n  };\n  const handleSelectRestaurant = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n  const handleSpin = () => {\n    if (restaurants.length === 0) {\n      alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");\n      return;\n    }\n    const excludedCategories = excludedCategory.split(',').map(cat => cat.trim());\n    const filteredRestaurants = restaurants.filter(restaurant => {\n      const isExcluded = excludedCategories.some(cat => restaurant.category_name.includes(cat));\n      const isIncluded = includedCategory ? restaurant.category_name.includes(includedCategory) : true;\n      return !isExcluded && isIncluded;\n    });\n    const randomRestaurants = filteredRestaurants.length > 0 ? filteredRestaurants : restaurants;\n    const randomSelection = randomRestaurants.sort(() => 0.5 - Math.random()).slice(0, count || randomRestaurants.length);\n    setRestaurants(randomSelection);\n    if (randomSelection.length > 0) {\n      setMapCenter({\n        lat: parseFloat(randomSelection[0].y),\n        lng: parseFloat(randomSelection[0].x)\n      });\n    }\n  };\n  const handleLocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({\n          lat,\n          lng\n        });\n        await fetchNearbyRestaurants(lng, lat);\n      }, error => {\n        console.error('위치를 가져오지 못했습니다: ', error);\n        alert('위치를 가져오지 못했습니다.');\n      });\n    } else {\n      alert('이 브라우저는 Geolocation을 지원하지 않습니다.');\n    }\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      window.kakao.maps.load(() => setMapLoaded(true));\n    };\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2DD\\uB2F9 \\uCD94\\uCC9C \\uC571\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadiusInput, {\n      setRadius: setRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC8FC\\uC18C \\uB610\\uB294 \\uAC74\\uBB3C\\uBA85 \\uC785\\uB825\",\n      value: address,\n      onChange: e => setAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollable-list\",\n      children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectAddress(result),\n        children: [result.address_name, \" (\", result.place_name, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      mapLoaded: mapLoaded,\n      mapCenter: mapCenter,\n      restaurants: restaurants,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestaurantList, {\n      restaurants: restaurants,\n      onSelect: handleSelectRestaurant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLocationClick,\n        children: \"\\uD604\\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uCD94\\uCC9C \\uAC1C\\uC218\",\n        value: count || '' // count가 0일 때는 빈 문자열로 설정\n        ,\n        onChange: e => setCount(Number(e.target.value) || 0) // Number로 변환하고, falsy 값일 경우 0으로 설정\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '210px'\n        },\n        onClick: handleSpin,\n        children: \"\\uB79C\\uB364 \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uCD94\\uCC9C\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC608: \\uD55C\\uC2DD)\",\n        value: includedCategory,\n        onChange: e => setIncludedCategory(e.target.value || '') // 빈 문자열 처리\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uC678\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC27C\\uD45C\\uB85C \\uAD6C\\uBD84)\",\n        value: excludedCategory,\n        onChange: e => setExcludedCategory(e.target.value || '') // 빈 문자열 처리\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9FCpRjiGTWS+ardYrUCNBjZJhto=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","RestaurantList","RadiusInput","jsxDEV","_jsxDEV","App","_s","radius","setRadius","address","setAddress","restaurants","setRestaurants","count","setCount","excludedCategory","setExcludedCategory","includedCategory","setIncludedCategory","selectedRestaurant","setSelectedRestaurant","mapLoaded","setMapLoaded","mapCenter","setMapCenter","lat","lng","searchResults","setSearchResults","REST_API_KEY","JAVASCRIPT_API_KEY","fetchAddressData","query","url","encodeURIComponent","response","fetch","headers","Authorization","ok","Error","status","statusText","data","json","documents","length","alert","error","console","fetchNearbyRestaurants","x","y","handleSearch","handleSelectAddress","result","address_name","parseFloat","handleSelectRestaurant","restaurant","handleSpin","excludedCategories","split","map","cat","trim","filteredRestaurants","filter","isExcluded","some","category_name","includes","isIncluded","randomRestaurants","randomSelection","sort","Math","random","slice","handleLocationClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","script","document","createElement","src","async","onload","window","kakao","maps","load","head","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","place_name","onSelect","style","textAlign","margin","display","justifyContent","Number","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Desktop/lunch-master-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport RestaurantList from './RestaurantList';\nimport RadiusInput from './RadiusInput';\nimport './styles.css';\n\nconst App = () => {\n  const [radius, setRadius] = useState(2000);\n  const [address, setAddress] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n  const [count, setCount] = useState(0);\n  const [excludedCategory, setExcludedCategory] = useState('');\n  const [includedCategory, setIncludedCategory] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.9687735, lng: 127.4802359 });\n  const [searchResults, setSearchResults] = useState([]);\n\n  const REST_API_KEY = '25d26859dae2a8cb671074b910e16912';\n  const JAVASCRIPT_API_KEY = '51120fdc1dd2ae273ccd643e7a301c77';\n\n  const fetchAddressData = async (query) => {\n    const url = `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`; // 주소 검색으로 변경\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `KakaoAK ${REST_API_KEY}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`주소 검색 실패: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setSearchResults(data.documents);\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주소 검색 중 오류 발생:\", error);\n      alert(\"주소 검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const fetchNearbyRestaurants = async (x, y) => {\n    const url = `https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `KakaoAK ${REST_API_KEY}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setRestaurants(data.documents);\n      } else {\n        alert(\"근처에 식당이 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"식당 검색 중 오류 발생:\", error);\n      alert(\"식당 검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!address) {\n      alert(\"주소를 입력해 주세요.\");\n      return;\n    }\n\n    await fetchAddressData(address); // 주소를 검색\n  };\n\n  const handleSelectAddress = (result) => {\n    setAddress(result.address_name); // 선택한 주소로 설정\n    setMapCenter({ lat: parseFloat(result.y), lng: parseFloat(result.x) }); // 지도 중심 설정\n    fetchNearbyRestaurants(result.x, result.y); // 근처 식당 검색\n    setSearchResults([]); // 검색 결과 초기화\n  };\n\n  const handleSelectRestaurant = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const handleSpin = () => {\n    if (restaurants.length === 0) {\n      alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");\n      return;\n    }\n\n    const excludedCategories = excludedCategory.split(',').map((cat) => cat.trim());\n\n    const filteredRestaurants = restaurants.filter((restaurant) => {\n      const isExcluded = excludedCategories.some((cat) => restaurant.category_name.includes(cat));\n      const isIncluded = includedCategory ? restaurant.category_name.includes(includedCategory) : true;\n      return !isExcluded && isIncluded;\n    });\n\n    const randomRestaurants = filteredRestaurants.length > 0 ? filteredRestaurants : restaurants;\n\n    const randomSelection = randomRestaurants\n      .sort(() => 0.5 - Math.random())\n      .slice(0, count || randomRestaurants.length);\n\n    setRestaurants(randomSelection);\n    if (randomSelection.length > 0) {\n      setMapCenter({ lat: parseFloat(randomSelection[0].y), lng: parseFloat(randomSelection[0].x) });\n    }\n  };\n\n  const handleLocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({ lat, lng });\n        await fetchNearbyRestaurants(lng, lat);\n      }, (error) => {\n        console.error('위치를 가져오지 못했습니다: ', error);\n        alert('위치를 가져오지 못했습니다.');\n      });\n    } else {\n      alert('이 브라우저는 Geolocation을 지원하지 않습니다.');\n    }\n  };\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      window.kakao.maps.load(() => setMapLoaded(true));\n    };\n    document.head.appendChild(script);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>식당 추천 앱</h1>\n      <RadiusInput setRadius={setRadius} />\n      <input\n        type=\"text\"\n        placeholder=\"주소 또는 건물명 입력\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <button onClick={handleSearch}>검색</button>\n      \n      {searchResults.length > 0 && (\n        <div className=\"scrollable-list\">\n          {searchResults.map((result, index) => (\n            <div key={index} onClick={() => handleSelectAddress(result)}>\n              {result.address_name} ({result.place_name})\n            </div>\n          ))}\n        </div>\n      )}\n\n      <MapComponent mapLoaded={mapLoaded} mapCenter={mapCenter} restaurants={restaurants} radius={radius} />\n      <RestaurantList restaurants={restaurants} onSelect={handleSelectRestaurant} />\n\n      <div style={{ textAlign: 'center', margin: '10px 0' }}>\n        <button onClick={handleLocationClick}>현위치</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <input\n          type=\"number\"\n          placeholder=\"추천 개수\"\n          value={count || ''} // count가 0일 때는 빈 문자열로 설정\n          onChange={(e) => setCount(Number(e.target.value) || 0)} // Number로 변환하고, falsy 값일 경우 0으로 설정\n        />\n        <button style={{ width: '210px' }} onClick={handleSpin}>랜덤 추천</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '0px' }}>\n        <input\n          type=\"text\"\n          placeholder=\"추천할 카테고리 (예: 한식)\"\n          value={includedCategory}\n          onChange={(e) => setIncludedCategory(e.target.value || '')} // 빈 문자열 처리\n        />\n        <input\n          type=\"text\"\n          placeholder=\"제외할 카테고리 (쉼표로 구분)\"\n          value={excludedCategory}\n          onChange={(e) => setExcludedCategory(e.target.value || '')} // 빈 문자열 처리\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}