{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Desktop\\\\lunch-master-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport RestaurantList from './RestaurantList';\nimport RadiusInput from './RadiusInput';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [radius, setRadius] = useState(2000);\n  const [address, setAddress] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n  const [count, setCount] = useState(0);\n  const [excludedCategory, setExcludedCategory] = useState('');\n  const [includedCategory, setIncludedCategory] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.9687735,\n    lng: 127.4802359\n  });\n  const [searchResults, setSearchResults] = useState([]);\n  const REST_API_KEY = '25d26859dae2a8cb671074b910e16912';\n  const JAVASCRIPT_API_KEY = '51120fdc1dd2ae273ccd643e7a301c77';\n  const fetchAddressData = async query => {\n    const addressUrl = `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`;\n    const keywordUrl = `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(query)}`;\n    try {\n      const [addressResponse, keywordResponse] = await Promise.all([fetch(addressUrl, {\n        headers: {\n          Authorization: `KakaoAK ${REST_API_KEY}`\n        }\n      }), fetch(keywordUrl, {\n        headers: {\n          Authorization: `KakaoAK ${REST_API_KEY}`\n        }\n      })]);\n      if (!addressResponse.ok || !keywordResponse.ok) {\n        throw new Error(`검색 실패: ${addressResponse.status} ${addressResponse.statusText}`);\n      }\n      const addressData = await addressResponse.json();\n      const keywordData = await keywordResponse.json();\n\n      // 주소와 키워드 검색 결과를 합침\n      const combinedResults = [...(addressData.documents || []), ...(keywordData.documents || [])];\n      if (combinedResults.length > 0) {\n        setSearchResults(combinedResults);\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"검색 중 오류 발생:\", error);\n      alert(\"검색 중 오류가 발생했습니다.\");\n    }\n  };\n  const fetchNearbyRestaurants = async (x, y) => {\n    const url = `https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `KakaoAK ${REST_API_KEY}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setRestaurants(data.documents);\n      } else {\n        alert(\"근처에 식당이 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"식당 검색 중 오류 발생:\", error);\n      alert(\"식당 검색 중 오류가 발생했습니다.\");\n    }\n  };\n  const handleSearch = async () => {\n    if (!address) {\n      alert(\"주소를 입력해 주세요.\");\n      return;\n    }\n    await fetchAddressData(address); // 주소 및 건물명 검색\n  };\n  const handleSelectAddress = result => {\n    setAddress(result.address_name || result.place_name); // 선택한 주소나 건물명으로 설정\n    setMapCenter({\n      lat: parseFloat(result.y),\n      lng: parseFloat(result.x)\n    }); // 지도 중심 설정\n    fetchNearbyRestaurants(result.x, result.y); // 근처 식당 검색\n    setSearchResults([]); // 검색 결과 초기화\n  };\n  const handleSelectRestaurant = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n  const handleSpin = () => {\n    if (restaurants.length === 0) {\n      alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");\n      return;\n    }\n    const excludedCategories = excludedCategory.split(',').map(cat => cat.trim());\n    const filteredRestaurants = restaurants.filter(restaurant => {\n      const isExcluded = excludedCategories.some(cat => restaurant.category_name.includes(cat));\n      const isIncluded = includedCategory ? restaurant.category_name.includes(includedCategory) : true;\n      return !isExcluded && isIncluded;\n    });\n    const randomRestaurants = filteredRestaurants.length > 0 ? filteredRestaurants : restaurants;\n    const randomSelection = randomRestaurants.sort(() => 0.5 - Math.random()).slice(0, count || randomRestaurants.length);\n    setRestaurants(randomSelection);\n    if (randomSelection.length > 0) {\n      setMapCenter({\n        lat: parseFloat(randomSelection[0].y),\n        lng: parseFloat(randomSelection[0].x)\n      });\n    }\n  };\n  const handleLocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({\n          lat,\n          lng\n        });\n        await fetchNearbyRestaurants(lng, lat);\n      }, error => {\n        console.error('위치를 가져오지 못했습니다: ', error);\n        alert('위치를 가져오지 못했습니다.');\n      });\n    } else {\n      alert('이 브라우저는 Geolocation을 지원하지 않습니다.');\n    }\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      window.kakao.maps.load(() => setMapLoaded(true));\n    };\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2DD\\uB2F9 \\uCD94\\uCC9C \\uC571\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadiusInput, {\n      setRadius: setRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC8FC\\uC18C \\uB610\\uB294 \\uAC74\\uBB3C\\uBA85 \\uC785\\uB825\",\n      value: address,\n      onChange: e => setAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollable-list\",\n      children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectAddress(result),\n        children: result.address_name || result.place_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      mapLoaded: mapLoaded,\n      mapCenter: mapCenter,\n      restaurants: restaurants,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestaurantList, {\n      restaurants: restaurants,\n      onSelect: handleSelectRestaurant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLocationClick,\n        children: \"\\uD604\\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\uCD94\\uCC9C \\uAC1C\\uC218\",\n        value: count || '',\n        onChange: e => setCount(Number(e.target.value) || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '210px'\n        },\n        onClick: handleSpin,\n        children: \"\\uB79C\\uB364 \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uCD94\\uCC9C\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC608: \\uD55C\\uC2DD)\",\n        value: includedCategory,\n        onChange: e => setIncludedCategory(e.target.value || '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uC678\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC27C\\uD45C\\uB85C \\uAD6C\\uBD84)\",\n        value: excludedCategory,\n        onChange: e => setExcludedCategory(e.target.value || '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9FCpRjiGTWS+ardYrUCNBjZJhto=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","RestaurantList","RadiusInput","jsxDEV","_jsxDEV","App","_s","radius","setRadius","address","setAddress","restaurants","setRestaurants","count","setCount","excludedCategory","setExcludedCategory","includedCategory","setIncludedCategory","selectedRestaurant","setSelectedRestaurant","mapLoaded","setMapLoaded","mapCenter","setMapCenter","lat","lng","searchResults","setSearchResults","REST_API_KEY","JAVASCRIPT_API_KEY","fetchAddressData","query","addressUrl","encodeURIComponent","keywordUrl","addressResponse","keywordResponse","Promise","all","fetch","headers","Authorization","ok","Error","status","statusText","addressData","json","keywordData","combinedResults","documents","length","alert","error","console","fetchNearbyRestaurants","x","y","url","response","data","handleSearch","handleSelectAddress","result","address_name","place_name","parseFloat","handleSelectRestaurant","restaurant","handleSpin","excludedCategories","split","map","cat","trim","filteredRestaurants","filter","isExcluded","some","category_name","includes","isIncluded","randomRestaurants","randomSelection","sort","Math","random","slice","handleLocationClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","script","document","createElement","src","async","onload","window","kakao","maps","load","head","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","onSelect","style","textAlign","margin","display","justifyContent","Number","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Desktop/lunch-master-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport RestaurantList from './RestaurantList';\nimport RadiusInput from './RadiusInput';\nimport './styles.css';\n\nconst App = () => {\n  const [radius, setRadius] = useState(2000);\n  const [address, setAddress] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n  const [count, setCount] = useState(0);\n  const [excludedCategory, setExcludedCategory] = useState('');\n  const [includedCategory, setIncludedCategory] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.9687735, lng: 127.4802359 });\n  const [searchResults, setSearchResults] = useState([]);\n\n  const REST_API_KEY = '25d26859dae2a8cb671074b910e16912';\n  const JAVASCRIPT_API_KEY = '51120fdc1dd2ae273ccd643e7a301c77';\n\n  const fetchAddressData = async (query) => {\n    const addressUrl = `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`;\n    const keywordUrl = `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(query)}`;\n  \n    try {\n      const [addressResponse, keywordResponse] = await Promise.all([\n        fetch(addressUrl, { headers: { Authorization: `KakaoAK ${REST_API_KEY}` } }),\n        fetch(keywordUrl, { headers: { Authorization: `KakaoAK ${REST_API_KEY}` } }),\n      ]);\n\n      if (!addressResponse.ok || !keywordResponse.ok) {\n        throw new Error(`검색 실패: ${addressResponse.status} ${addressResponse.statusText}`);\n      }\n\n      const addressData = await addressResponse.json();\n      const keywordData = await keywordResponse.json();\n\n      // 주소와 키워드 검색 결과를 합침\n      const combinedResults = [\n        ...(addressData.documents || []),\n        ...(keywordData.documents || [])\n      ];\n\n      if (combinedResults.length > 0) {\n        setSearchResults(combinedResults);\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"검색 중 오류 발생:\", error);\n      alert(\"검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const fetchNearbyRestaurants = async (x, y) => {\n    const url = `https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `KakaoAK ${REST_API_KEY}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setRestaurants(data.documents);\n      } else {\n        alert(\"근처에 식당이 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"식당 검색 중 오류 발생:\", error);\n      alert(\"식당 검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!address) {\n      alert(\"주소를 입력해 주세요.\");\n      return;\n    }\n\n    await fetchAddressData(address); // 주소 및 건물명 검색\n  };\n\n  const handleSelectAddress = (result) => {\n    setAddress(result.address_name || result.place_name); // 선택한 주소나 건물명으로 설정\n    setMapCenter({ lat: parseFloat(result.y), lng: parseFloat(result.x) }); // 지도 중심 설정\n    fetchNearbyRestaurants(result.x, result.y); // 근처 식당 검색\n    setSearchResults([]); // 검색 결과 초기화\n  };\n\n  const handleSelectRestaurant = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const handleSpin = () => {\n    if (restaurants.length === 0) {\n      alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");\n      return;\n    }\n\n    const excludedCategories = excludedCategory.split(',').map((cat) => cat.trim());\n\n    const filteredRestaurants = restaurants.filter((restaurant) => {\n      const isExcluded = excludedCategories.some((cat) => restaurant.category_name.includes(cat));\n      const isIncluded = includedCategory ? restaurant.category_name.includes(includedCategory) : true;\n      return !isExcluded && isIncluded;\n    });\n\n    const randomRestaurants = filteredRestaurants.length > 0 ? filteredRestaurants : restaurants;\n\n    const randomSelection = randomRestaurants\n      .sort(() => 0.5 - Math.random())\n      .slice(0, count || randomRestaurants.length);\n\n    setRestaurants(randomSelection);\n    if (randomSelection.length > 0) {\n      setMapCenter({ lat: parseFloat(randomSelection[0].y), lng: parseFloat(randomSelection[0].x) });\n    }\n  };\n\n  const handleLocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({ lat, lng });\n        await fetchNearbyRestaurants(lng, lat);\n      }, (error) => {\n        console.error('위치를 가져오지 못했습니다: ', error);\n        alert('위치를 가져오지 못했습니다.');\n      });\n    } else {\n      alert('이 브라우저는 Geolocation을 지원하지 않습니다.');\n    }\n  };\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      window.kakao.maps.load(() => setMapLoaded(true));\n    };\n    document.head.appendChild(script);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>식당 추천 앱</h1>\n      <RadiusInput setRadius={setRadius} />\n      <input\n        type=\"text\"\n        placeholder=\"주소 또는 건물명 입력\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <button onClick={handleSearch}>검색</button>\n      \n      {searchResults.length > 0 && (\n        <div className=\"scrollable-list\">\n          {searchResults.map((result, index) => (\n            <div key={index} onClick={() => handleSelectAddress(result)}>\n              {result.address_name || result.place_name}\n            </div>\n          ))}\n        </div>\n      )}\n\n      <MapComponent mapLoaded={mapLoaded} mapCenter={mapCenter} restaurants={restaurants} radius={radius} />\n      <RestaurantList restaurants={restaurants} onSelect={handleSelectRestaurant} />\n\n      <div style={{ textAlign: 'center', margin: '10px 0' }}>\n        <button onClick={handleLocationClick}>현위치</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <input\n          type=\"number\"\n          placeholder=\"추천 개수\"\n          value={count || ''}\n          onChange={(e) => setCount(Number(e.target.value) || 0)}\n        />\n        <button style={{ width: '210px' }} onClick={handleSpin}>랜덤 추천</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n        <input\n          type=\"text\"\n          placeholder=\"추천할 카테고리 (예: 한식)\"\n          value={includedCategory}\n          onChange={(e) => setIncludedCategory(e.target.value || '')}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"제외할 카테고리 (쉼표로 구분)\"\n          value={excludedCategory}\n          onChange={(e) => setExcludedCategory(e.target.value || '')}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}