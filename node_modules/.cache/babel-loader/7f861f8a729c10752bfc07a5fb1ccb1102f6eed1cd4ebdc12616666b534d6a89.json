{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smhrd\\\\Desktop\\\\lunch-master-main\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  mapLoaded,\n  restaurants,\n  mapCenter,\n  radius\n}) => {\n  _s();\n  // 원 추가 함수\n  const addCircle = (map, position) => {\n    const circle = new window.kakao.maps.Circle({\n      center: position,\n      radius: radius,\n      // 반경 사용\n      strokeWeight: 2,\n      strokeColor: '#75B8FA',\n      strokeOpacity: 0.7,\n      fillColor: '#CFE7FF',\n      fillOpacity: 0.5\n    });\n    circle.setMap(map);\n  };\n  useEffect(() => {\n    if (mapLoaded && window.kakao) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(mapCenter.lat, mapCenter.lng),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n\n      // 레스토랑 위치에 마커 추가\n      restaurants.forEach(restaurant => {\n        const markerPosition = new window.kakao.maps.LatLng(restaurant.y, restaurant.x);\n        const marker = new window.kakao.maps.Marker({\n          position: markerPosition,\n          title: restaurant.place_name\n        });\n        marker.setMap(map);\n      });\n\n      // 원 추가\n      addCircle(map, new window.kakao.maps.LatLng(mapCenter.lat, mapCenter.lng));\n    }\n  }, [mapLoaded, mapCenter, restaurants, radius]); // radius 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","MapComponent","mapLoaded","restaurants","mapCenter","radius","_s","addCircle","map","position","circle","window","kakao","maps","Circle","center","strokeWeight","strokeColor","strokeOpacity","fillColor","fillOpacity","setMap","container","document","getElementById","options","LatLng","lat","lng","level","Map","forEach","restaurant","markerPosition","y","x","marker","Marker","title","place_name","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smhrd/Desktop/lunch-master-main/src/MapComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst MapComponent = ({ mapLoaded, restaurants, mapCenter, radius }) => {\n  // 원 추가 함수\n  const addCircle = (map, position) => {\n    const circle = new window.kakao.maps.Circle({\n      center: position,\n      radius: radius, // 반경 사용\n      strokeWeight: 2,\n      strokeColor: '#75B8FA',\n      strokeOpacity: 0.7,\n      fillColor: '#CFE7FF',\n      fillOpacity: 0.5,\n    });\n    circle.setMap(map);\n  };\n\n  useEffect(() => {\n    if (mapLoaded && window.kakao) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(mapCenter.lat, mapCenter.lng),\n        level: 3,\n      };\n\n      const map = new window.kakao.maps.Map(container, options);\n\n      // 레스토랑 위치에 마커 추가\n      restaurants.forEach((restaurant) => {\n        const markerPosition = new window.kakao.maps.LatLng(restaurant.y, restaurant.x);\n        const marker = new window.kakao.maps.Marker({\n          position: markerPosition,\n          title: restaurant.place_name,\n        });\n        marker.setMap(map);\n      });\n\n      // 원 추가\n      addCircle(map, new window.kakao.maps.LatLng(mapCenter.lat, mapCenter.lng));\n    }\n  }, [mapLoaded, mapCenter, restaurants, radius]); // radius 추가\n\n  return <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>;\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtE;EACA,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACnC,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC;MAC1CC,MAAM,EAAEN,QAAQ;MAChBJ,MAAM,EAAEA,MAAM;MAAE;MAChBW,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE,SAAS;MACtBC,aAAa,EAAE,GAAG;MAClBC,SAAS,EAAE,SAAS;MACpBC,WAAW,EAAE;IACf,CAAC,CAAC;IACFV,MAAM,CAACW,MAAM,CAACb,GAAG,CAAC;EACpB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,IAAIS,MAAM,CAACC,KAAK,EAAE;MAC7B,MAAMU,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAChD,MAAMC,OAAO,GAAG;QACdV,MAAM,EAAE,IAAIJ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACa,MAAM,CAACtB,SAAS,CAACuB,GAAG,EAAEvB,SAAS,CAACwB,GAAG,CAAC;QAClEC,KAAK,EAAE;MACT,CAAC;MAED,MAAMrB,GAAG,GAAG,IAAIG,MAAM,CAACC,KAAK,CAACC,IAAI,CAACiB,GAAG,CAACR,SAAS,EAAEG,OAAO,CAAC;;MAEzD;MACAtB,WAAW,CAAC4B,OAAO,CAAEC,UAAU,IAAK;QAClC,MAAMC,cAAc,GAAG,IAAItB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACa,MAAM,CAACM,UAAU,CAACE,CAAC,EAAEF,UAAU,CAACG,CAAC,CAAC;QAC/E,MAAMC,MAAM,GAAG,IAAIzB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACwB,MAAM,CAAC;UAC1C5B,QAAQ,EAAEwB,cAAc;UACxBK,KAAK,EAAEN,UAAU,CAACO;QACpB,CAAC,CAAC;QACFH,MAAM,CAACf,MAAM,CAACb,GAAG,CAAC;MACpB,CAAC,CAAC;;MAEF;MACAD,SAAS,CAACC,GAAG,EAAE,IAAIG,MAAM,CAACC,KAAK,CAACC,IAAI,CAACa,MAAM,CAACtB,SAAS,CAACuB,GAAG,EAAEvB,SAAS,CAACwB,GAAG,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAAC1B,SAAS,EAAEE,SAAS,EAAED,WAAW,EAAEE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEjD,oBAAOL,OAAA;IAAKwC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxE,CAAC;AAACzC,EAAA,CAzCIL,YAAY;AAAA+C,EAAA,GAAZ/C,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}