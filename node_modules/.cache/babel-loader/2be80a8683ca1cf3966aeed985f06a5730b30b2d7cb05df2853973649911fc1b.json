{"ast":null,"code":"import React,{useState,useEffect}from'react';import MapComponent from'./MapComponent';import RestaurantList from'./RestaurantList';import RadiusInput from'./RadiusInput';import'./styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[radius,setRadius]=useState(2000);const[address,setAddress]=useState('');const[restaurants,setRestaurants]=useState([]);const[count,setCount]=useState(0);const[excludedCategory,setExcludedCategory]=useState('');const[includedCategory,setIncludedCategory]=useState('');const[selectedRestaurant,setSelectedRestaurant]=useState(null);const[mapLoaded,setMapLoaded]=useState(false);const[mapCenter,setMapCenter]=useState({lat:34.9687735,lng:127.4802359});const[searchResults,setSearchResults]=useState([]);const REST_API_KEY='25d26859dae2a8cb671074b910e16912';const JAVASCRIPT_API_KEY='51120fdc1dd2ae273ccd643e7a301c77';const fetchAddressData=async query=>{const url=`https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`;// 주소 검색으로 변경\ntry{const response=await fetch(url,{headers:{Authorization:`KakaoAK ${REST_API_KEY}`}});if(!response.ok){throw new Error(`주소 검색 실패: ${response.status} ${response.statusText}`);}const data=await response.json();if(data.documents&&data.documents.length>0){setSearchResults(data.documents);}else{alert(\"검색 결과가 없습니다.\");}}catch(error){console.error(\"주소 검색 중 오류 발생:\",error);alert(\"주소 검색 중 오류가 발생했습니다.\");}};const fetchNearbyRestaurants=async(x,y)=>{const url=`https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;try{const response=await fetch(url,{headers:{Authorization:`KakaoAK ${REST_API_KEY}`}});if(!response.ok){throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);}const data=await response.json();if(data.documents&&data.documents.length>0){setRestaurants(data.documents);}else{alert(\"근처에 식당이 없습니다.\");}}catch(error){console.error(\"식당 검색 중 오류 발생:\",error);alert(\"식당 검색 중 오류가 발생했습니다.\");}};const handleSearch=async()=>{if(!address){alert(\"주소를 입력해 주세요.\");return;}await fetchAddressData(address);// 주소를 검색\n};const handleSelectAddress=result=>{setAddress(result.address_name);// 선택한 주소로 설정\nsetMapCenter({lat:parseFloat(result.y),lng:parseFloat(result.x)});// 지도 중심 설정\nfetchNearbyRestaurants(result.x,result.y);// 근처 식당 검색\nsetSearchResults([]);// 검색 결과 초기화\n};const handleSelectRestaurant=restaurant=>{setSelectedRestaurant(restaurant);};const handleSpin=()=>{if(restaurants.length===0){alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");return;}const excludedCategories=excludedCategory.split(',').map(cat=>cat.trim());const filteredRestaurants=restaurants.filter(restaurant=>{const isExcluded=excludedCategories.some(cat=>restaurant.category_name.includes(cat));const isIncluded=includedCategory?restaurant.category_name.includes(includedCategory):true;return!isExcluded&&isIncluded;});const randomRestaurants=filteredRestaurants.length>0?filteredRestaurants:restaurants;const randomSelection=randomRestaurants.sort(()=>0.5-Math.random()).slice(0,count||randomRestaurants.length);setRestaurants(randomSelection);if(randomSelection.length>0){setMapCenter({lat:parseFloat(randomSelection[0].y),lng:parseFloat(randomSelection[0].x)});}};const handleLocationClick=async()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(async position=>{const lat=position.coords.latitude;const lng=position.coords.longitude;setMapCenter({lat,lng});await fetchNearbyRestaurants(lng,lat);},error=>{console.error('위치를 가져오지 못했습니다: ',error);alert('위치를 가져오지 못했습니다.');});}else{alert('이 브라우저는 Geolocation을 지원하지 않습니다.');}};useEffect(()=>{const script=document.createElement(\"script\");script.src=`https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;script.async=true;script.onload=()=>{window.kakao.maps.load(()=>setMapLoaded(true));};document.head.appendChild(script);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uC2DD\\uB2F9 \\uCD94\\uCC9C \\uC571\"}),/*#__PURE__*/_jsx(RadiusInput,{setRadius:setRadius}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC8FC\\uC18C \\uB610\\uB294 \\uAC74\\uBB3C\\uBA85 \\uC785\\uB825\",value:address,onChange:e=>setAddress(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"\\uAC80\\uC0C9\"}),searchResults.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"scrollable-list\",children:searchResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectAddress(result),children:[result.address_name,\" (\",result.place_name,\")\"]},index))}),/*#__PURE__*/_jsx(MapComponent,{mapLoaded:mapLoaded,mapCenter:mapCenter,restaurants:restaurants,radius:radius}),/*#__PURE__*/_jsx(RestaurantList,{restaurants:restaurants,onSelect:handleSelectRestaurant}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',margin:'10px 0'},children:/*#__PURE__*/_jsx(\"button\",{onClick:handleLocationClick,children:\"\\uD604\\uC704\\uCE58\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\uCD94\\uCC9C \\uAC1C\\uC218\",value:count||''// count가 0일 때는 빈 문자열로 설정\n,onChange:e=>setCount(Number(e.target.value)||0)// Number로 변환하고, falsy 값일 경우 0으로 설정\n}),/*#__PURE__*/_jsx(\"button\",{style:{width:'210px'},onClick:handleSpin,children:\"\\uB79C\\uB364 \\uCD94\\uCC9C\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginTop:'0px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uCD94\\uCC9C\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC608: \\uD55C\\uC2DD)\",value:includedCategory,onChange:e=>setIncludedCategory(e.target.value||'')// 빈 문자열 처리\n}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC81C\\uC678\\uD560 \\uCE74\\uD14C\\uACE0\\uB9AC (\\uC27C\\uD45C\\uB85C \\uAD6C\\uBD84)\",value:excludedCategory,onChange:e=>setExcludedCategory(e.target.value||'')// 빈 문자열 처리\n})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","MapComponent","RestaurantList","RadiusInput","jsx","_jsx","jsxs","_jsxs","App","radius","setRadius","address","setAddress","restaurants","setRestaurants","count","setCount","excludedCategory","setExcludedCategory","includedCategory","setIncludedCategory","selectedRestaurant","setSelectedRestaurant","mapLoaded","setMapLoaded","mapCenter","setMapCenter","lat","lng","searchResults","setSearchResults","REST_API_KEY","JAVASCRIPT_API_KEY","fetchAddressData","query","url","encodeURIComponent","response","fetch","headers","Authorization","ok","Error","status","statusText","data","json","documents","length","alert","error","console","fetchNearbyRestaurants","x","y","handleSearch","handleSelectAddress","result","address_name","parseFloat","handleSelectRestaurant","restaurant","handleSpin","excludedCategories","split","map","cat","trim","filteredRestaurants","filter","isExcluded","some","category_name","includes","isIncluded","randomRestaurants","randomSelection","sort","Math","random","slice","handleLocationClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","script","document","createElement","src","async","onload","window","kakao","maps","load","head","appendChild","className","children","type","placeholder","value","onChange","e","target","onClick","index","place_name","onSelect","style","textAlign","margin","display","justifyContent","Number","width","marginTop"],"sources":["C:/Users/smhrd/Desktop/lunch-master-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport RestaurantList from './RestaurantList';\nimport RadiusInput from './RadiusInput';\nimport './styles.css';\n\nconst App = () => {\n  const [radius, setRadius] = useState(2000);\n  const [address, setAddress] = useState('');\n  const [restaurants, setRestaurants] = useState([]);\n  const [count, setCount] = useState(0);\n  const [excludedCategory, setExcludedCategory] = useState('');\n  const [includedCategory, setIncludedCategory] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.9687735, lng: 127.4802359 });\n  const [searchResults, setSearchResults] = useState([]);\n\n  const REST_API_KEY = '25d26859dae2a8cb671074b910e16912';\n  const JAVASCRIPT_API_KEY = '51120fdc1dd2ae273ccd643e7a301c77';\n\n  const fetchAddressData = async (query) => {\n    const url = `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`; // 주소 검색으로 변경\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `KakaoAK ${REST_API_KEY}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`주소 검색 실패: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setSearchResults(data.documents);\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주소 검색 중 오류 발생:\", error);\n      alert(\"주소 검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const fetchNearbyRestaurants = async (x, y) => {\n    const url = `https://dapi.kakao.com/v2/local/search/keyword.json?query=식당&x=${x}&y=${y}&radius=${radius}`;\n\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `KakaoAK ${REST_API_KEY}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(`식당 검색 실패: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.documents && data.documents.length > 0) {\n        setRestaurants(data.documents);\n      } else {\n        alert(\"근처에 식당이 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"식당 검색 중 오류 발생:\", error);\n      alert(\"식당 검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!address) {\n      alert(\"주소를 입력해 주세요.\");\n      return;\n    }\n\n    await fetchAddressData(address); // 주소를 검색\n  };\n\n  const handleSelectAddress = (result) => {\n    setAddress(result.address_name); // 선택한 주소로 설정\n    setMapCenter({ lat: parseFloat(result.y), lng: parseFloat(result.x) }); // 지도 중심 설정\n    fetchNearbyRestaurants(result.x, result.y); // 근처 식당 검색\n    setSearchResults([]); // 검색 결과 초기화\n  };\n\n  const handleSelectRestaurant = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const handleSpin = () => {\n    if (restaurants.length === 0) {\n      alert(\"식당 목록이 비어 있습니다. 주소를 검색해 주세요.\");\n      return;\n    }\n\n    const excludedCategories = excludedCategory.split(',').map((cat) => cat.trim());\n\n    const filteredRestaurants = restaurants.filter((restaurant) => {\n      const isExcluded = excludedCategories.some((cat) => restaurant.category_name.includes(cat));\n      const isIncluded = includedCategory ? restaurant.category_name.includes(includedCategory) : true;\n      return !isExcluded && isIncluded;\n    });\n\n    const randomRestaurants = filteredRestaurants.length > 0 ? filteredRestaurants : restaurants;\n\n    const randomSelection = randomRestaurants\n      .sort(() => 0.5 - Math.random())\n      .slice(0, count || randomRestaurants.length);\n\n    setRestaurants(randomSelection);\n    if (randomSelection.length > 0) {\n      setMapCenter({ lat: parseFloat(randomSelection[0].y), lng: parseFloat(randomSelection[0].x) });\n    }\n  };\n\n  const handleLocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({ lat, lng });\n        await fetchNearbyRestaurants(lng, lat);\n      }, (error) => {\n        console.error('위치를 가져오지 못했습니다: ', error);\n        alert('위치를 가져오지 못했습니다.');\n      });\n    } else {\n      alert('이 브라우저는 Geolocation을 지원하지 않습니다.');\n    }\n  };\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${JAVASCRIPT_API_KEY}&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      window.kakao.maps.load(() => setMapLoaded(true));\n    };\n    document.head.appendChild(script);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>식당 추천 앱</h1>\n      <RadiusInput setRadius={setRadius} />\n      <input\n        type=\"text\"\n        placeholder=\"주소 또는 건물명 입력\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <button onClick={handleSearch}>검색</button>\n      \n      {searchResults.length > 0 && (\n        <div className=\"scrollable-list\">\n          {searchResults.map((result, index) => (\n            <div key={index} onClick={() => handleSelectAddress(result)}>\n              {result.address_name} ({result.place_name})\n            </div>\n          ))}\n        </div>\n      )}\n\n      <MapComponent mapLoaded={mapLoaded} mapCenter={mapCenter} restaurants={restaurants} radius={radius} />\n      <RestaurantList restaurants={restaurants} onSelect={handleSelectRestaurant} />\n\n      <div style={{ textAlign: 'center', margin: '10px 0' }}>\n        <button onClick={handleLocationClick}>현위치</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <input\n          type=\"number\"\n          placeholder=\"추천 개수\"\n          value={count || ''} // count가 0일 때는 빈 문자열로 설정\n          onChange={(e) => setCount(Number(e.target.value) || 0)} // Number로 변환하고, falsy 값일 경우 0으로 설정\n        />\n        <button style={{ width: '210px' }} onClick={handleSpin}>랜덤 추천</button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '0px' }}>\n        <input\n          type=\"text\"\n          placeholder=\"추천할 카테고리 (예: 한식)\"\n          value={includedCategory}\n          onChange={(e) => setIncludedCategory(e.target.value || '')} // 빈 문자열 처리\n        />\n        <input\n          type=\"text\"\n          placeholder=\"제외할 카테고리 (쉼표로 구분)\"\n          value={excludedCategory}\n          onChange={(e) => setExcludedCategory(e.target.value || '')} // 빈 문자열 처리\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}